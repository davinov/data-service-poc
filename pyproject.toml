[tool.poetry]
name = "data-service-poc"
version = "0.1.0"
description = ""
authors = ["David Nowinsky <david@nowinsky.net>"]
readme = "README.md"
packages = [{include = "api", from = "src"}, {include = "query", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.100.1"
uvicorn = {extras = ["standard"], version = "^0.23.2"}
pydantic = "^2.1.1"
pyarrow = "^12.0.1"
polars = "^0.18.12"
connectorx = "0.3.2a7"
pypika = "^0.48.9"
redis = "^4.6.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
python-dotenv = "^1.0.0"
docker = "^6.1.3"
ipdb = "^0.13.13"
psycopg = {extras = ["binary"], version = "^3.1.9"}
pytest-asyncio = "^0.21.1"
black = "^23.7.0"
mypy = "^1.4.1"
ruff = "^0.0.284"
httpx = "^0.24.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = "tests/*"
asyncio_mode = "auto"

[tool.ruff.pep8-naming]
# Allow Pydantic's `@validator` decorator to trigger class method treatment.
classmethod-decorators = ["classmethod", "pydantic.validator"]

[tool.mypy]
python_version = "3.11"
files = "src,tests"
plugins = ["pydantic.mypy"]
pretty = true
strict = true
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
ignore_missing_imports = true
implicit_reexport = false
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_no_return = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
show_column_numbers = true
show_error_context = true
